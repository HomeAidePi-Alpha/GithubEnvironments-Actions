name: Azure FunctionApp Composite Creds

on:
  workflow_dispatch:
    inputs: 
      ENVIRONMENT:
        description: 'Environment'
        required: true
        default: 'preprod'
      AZURE_FUNCTION_APP_NAME:
        description: 'Name of the FunctionApp'
        required: true
        default: 'alpha-function-app-name'
      AZURE_APP_SERVICE_NAME:
        description: 'Name of the hosting App Service'
        required: true
        default: 'alpha-app-service-name'
      AZURE_SERVICE_PLAN_NAME:
        description: 'Name of the Service Plan'
        required: true
        default: 'alpha-service-plan-name'
      AZURE_RESOURCE_GROUP:
        description: 'Azure Resource Group'
        required: true
        default: 'alpha-resource-group'
      AZURE_RESOURCE_GROUP_NAME:
        description: 'Azure Resource Group Name'
        required: true
        default: 'alpha-resource-group-name'
      AZURE_STORAGE_ACCOUNT_NAME: 
        description: 'Azure Storage Account Name'
        required: true
        default: 'alpha-storage-account-name'
      AZURE_LOCATION:
        description: 'Azure Region/Location'
        required: true
        default: 'eastus2'

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  provision:
    name: Provision Azure Function App
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.ENVIRONMENT }}

    steps:  
    # Checkout the Repo
    - uses: actions/checkout@v3

    # Provision using composite
    - name: Provision Azure Function App with Terraform
      uses: ./.github/workflows/clouds/azure/appService/functionApp/creds/provision
      with:
        ENVIRONMENT: ${{ github.event.inputs.ENVIRONMENT }}
        AZURE_AD_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
        AZURE_AD_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
        AZURE_AD_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        AZURE_LOCATION: ${{ github.event.inputs.AZURE_LOCATION }}
        AZURE_SERVICE_PLAN_NAME: ${{ github.event.inputs.AZURE_SERVICE_PLAN_NAME }}
        AZURE_RESOURCE_GROUP: ${{ github.event.inputs.AZURE_RESOURCE_GROUP }}
        AZURE_RESOURCE_GROUP_NAME: ${{ github.event.inputs.AZURE_RESOURCE_GROUP_NAME }}
        AZURE_STORAGE_ACCOUNT_NAME: ${{ github.event.inputs.AZURE_STORAGE_ACCOUNT_NAME }}
    
  deploy:
    name: Deploy Azure Function App
    needs: [provision]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.ENVIRONMENT }}
    steps:
    # Checkout the Repo
    - uses: actions/checkout@v3

    # Login to Azure CLI
    - name: Az CLI Login via OIDC
      id: azure-login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Get publish profile
      uses: azure/CLI@v1
      with:
        azcliversion: 2.35.0
        inlineScript: |
                      echo "::set-output name=PUBLISH_PROFILE::$(az webapp deployment list-publishing-profiles -g '${{ github.event.inputs.AZURE_RESOURCE_GROUP_NAME }}' -n '${{ github.event.inputs.AZURE_APP_SERVICE_NAME }}' --xml)"
        id: getPublishProfile

    # This section runs the Azure function app action composite with creds
    - name: Deploy Function app with creds publish profile
      id: deploy
      uses: ./.github/workflows/clouds/azure/appService/functionApp/creds/deploy
      with:
        AZURE_FUNCTIONAPP_PUBLISH_PROFILE:  ${{ steps.getPublishProfile.outputs.PUBLISH_PROFILE }}
        AZURE_FUNCTIONAPP_NAME: ${{ github.events.inputs.AZURE_FUNCTION_APP_NAME }}
        AZURE_FUNCTIONAPP_PACKAGE_PATH: ${{ secrets.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        AZURE_FUNCTIONAPP_DIR_PATH: ${{ secrets.AZURE_FUNCTIONAPP_DIR_PATH }}
  
  chatops:
    name: Send notifications with Teams
    needs: [provision, deploy]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.ENVIRONMENT }}
    steps:
      # Checkout the Repo
      - uses: actions/checkout@v3

      # Send Chat Ops notification
      - name: Send chat ops notification to teams
        uses: dhollerbach/actions.send-message-to-ms-teams@1.0.10
        with:
          webhook: ${{ secrets.TEAMS_WEBHOOK }}
          message: 'Deployment Completed for commit: ${{ github.sha }} check logs to determine success.'