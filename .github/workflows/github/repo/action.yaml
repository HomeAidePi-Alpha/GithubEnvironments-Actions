name: Create a GitHub Repo and populate code
on:
  push:
    branches:
      - "main"

inputs:
  GITHUB_REPO_BRANCH:
    description: 'GitHub Repo Branch Name usually "main" or  "master"'
    required: true
  GITHUB_USER_Name:
    description: 'GitHub User Name'
    required: true
  GITHUB_USER_EMAIL:
    description: 'GitHub Repo Email'
    required: true
  GITHUB_REPO_NAME:
    description: 'GitHub Repo Name'
    required: true
  GITHUB_REPO_DESCRIPTION:
    description: 'GitHub Repo Description'
    required: true
  GITHUB_REPO_FILES:
    description: 'GitHub Repo Files Directory'
    required: true
  GITHUB_REPO_URL:
    description: 'GitHub Repo URL to the .git'
    required: true
  GITHUB_REPO_TOKEN:
    description: 'GitHub Repo Token for Auth'
    required: true
  GITHUB_REPO_FILE_LIST:
    description: 'GitHub Repo File List'
    required: true
  TEAMS_WEBHOOK:
    description: 'ChatOps Webhook for Ms Teams Channel Connector'
    required: true

env:
  python-version: [ '2.x', '3.x', 'pypy-2.7', 'pypy-3.7', 'pypy-3.8' ]

runs:
    using: "composite"
    steps:
      # Checkout the repo
    - name: Check out Repo
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.python-version }}
    - name: Display Python version
      shell: bash
      run: python ${{ inputs.GITHUB_REPO_FILE_LIST }}
    - name: Deploy Files
      shell: bash
      run: |
        git config user.name ${{ inputs.GITHUB_USER_NAME }}
        git config user.email "${{ inputs.GITHUB_USER_EMAIL }}"
        git remote add gh-token "https://${{ inputs.GITHUB_REPO_TOKEN}}@github.com/:${{ inputs.GITHUB_ORG_TOKEN}}/:${{ inputs.GITHUB_REPO_NAME}}.git"
        git fetch gh-token && git fetch gh-token gh-pages:gh-pages
        python -m mkdocs gh-deploy -v --clean --remote-name gh-token
        git push gh-token gh-pages
    # Send Chat Ops notification
    - name: Send chat ops notification to teams
      uses: dhollerbach/actions.send-message-to-ms-teams@1.0.10
      with:
        webhook: ${{ inputs.TEAMS_WEBHOOK }}
        message: 'Deployment Completed for github: ${{ github.sha }}'