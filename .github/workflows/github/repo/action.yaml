name: Create a GitHub Repo and populate code
on:
  push:
    branches:
      - "main"

inputs:
  GITHUB_ORG_NAME:
    description: 'GitHub Organization Name'
    required: true
  GITHUB_REPO_BRANCH:
    description: 'GitHub Repo Branch Name usually "main" or  "master"'
    required: true
  GITHUB_USER_Name:
    description: 'GitHub User Name'
    required: true
  GITHUB_USER_EMAIL:
    description: 'GitHub Repo Email'
    required: true
  GITHUB_REPO_NAME:
    description: 'GitHub Repo Name'
    required: true
  GITHUB_REPO_DESCRIPTION:
    description: 'GitHub Repo Description'
    required: true
  GITHUB_REPO_FILES:
    description: 'GitHub Repo Files Directory'
    required: true
  GITHUB_REPO_URL:
    description: 'GitHub Repo URL to the .git'
    required: true
  GITHUB_REPO_TOKEN:
    description: 'GitHub Repo Token for Auth'
    required: true
  GITHUB_REPO_FILE_LIST:
    description: 'GitHub Repo File List'
    required: true
  TEAMS_WEBHOOK:
    description: 'ChatOps Webhook for Ms Teams Channel Connector'
    required: true

env:
  python-version: [ '2.x', '3.x', 'pypy-2.7', 'pypy-3.7', 'pypy-3.8' ]
  python-architecture: 'x64'

runs:
    using: "composite"
    steps:
      # Checkout the repo
    - name: Check out Repo
      uses: actions/checkout@v3
    - name: Set up Python 3.x
      uses: actions/setup-python@v3
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: ${{ env.python-version }}
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: ${{ env.python-architecture }}
    # Printing the current Python version
    - name: Display Python version & Execute the file list
      shell: bash
      run: | 
        python -c "import sys; print(sys.version)"
        python ${{ inputs.GITHUB_REPO_FILE_LIST }}
    - name: Create Github Repo and Push files
      shell: bash
      run: |
        git config --global user.name ${{ inputs.GITHUB_USER_NAME }}
        git config --global user.email ${{ inputs.GITHUB_USER_EMAIL }}
        git config --global init.defaultBranch ${{ inputs.GITHUB_REPO_BRANCH }}
        rm -rf .git/
        git init
        git remote add origin "https://${{ inputs.GITHUB_REPO_TOKEN}}@github.com/${{ inputs.GITHUB_ORG_NAME}}/${{ inputs.GITHUB_REPO_NAME}}.git"
        gh auth login --with-token ${{ inputs.GITHUB_REPO_TOKEN}}
        gh repo create ${{ inputs.GITHUB_ORG_NAME}}/${{ inputs.GITHUB_REPO_NAME}}
        git add README.md --force
        git commit -m "initial alpha checkin"
        git push -f origin ${{ inputs.GITHUB_REPO_BRANCH }}
    # Send Chat Ops notification
    - name: Send chat ops notification to teams
      uses: dhollerbach/actions.send-message-to-ms-teams@1.0.10
      with:
        webhook: ${{ inputs.TEAMS_WEBHOOK }}
        message: 'Deployment Completed for github: ${{ github.sha }}'