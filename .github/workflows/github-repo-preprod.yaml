name: Preprod create a GitHub Repo and populate code, create secrets, docs & wiki, test for quality and check standards

# This will run when kicked off manually or by trigger
on:
  workflow_dispatch:
    inputs:
      user_name:
        description: 'User Name'
        required: true
        default: 'Vandy'
      user_email:
        description: 'User Email'
        required: true
        default: 'matthew.vandergrift@homeaidepi.com'
      branch:
        description: 'GitHub Repo Branch'
        required: true
        default: 'main'
      org_name:
        description: 'GitHub Org Name'
        required: true
        default: 'HomeAidePi-Alpha'
      repo_name:
        description: 'GitHub Repo Name'
        required: true
        default: 'GitHubEnvironments-Alpha'
      file_list:
        description: 'GitHub Repo File List'
        required: true
        default: './.github/workflows/github/repo/src/alpha.py'
      token:
        description: 'A Token'
        required: true
        default: ''
      teams_webhook:
        description: 'Teams Webhook'
        required: false
        default: ''
      slack_webhook:
        description: 'Slack Webhook'
        required: false
        default: ''

jobs:
  build:
    name: Build-Alpha
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest]
        # todo implement quality strategy after tiger team committee approval
        # package:
        #   - coding-standard
        #   - lint-rules (eslint, flake8)
        #   - commit-guidelines
        #   - pull-request-peer-review
        #   - quality-check
    runs-on: ${{ matrix.os }}
    environment: 'preprod'
    # todo Implement principle of least priv based on need
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      actions: 'write'
      deployments: 'write'
      repository-projects: 'write'
    steps:
    # Checkout the repo
    - uses: actions/checkout@v3
    # Create a GitHub Repo, populate base code
    - uses: ./.github/workflows/github/repo/create-pre
      with:
          ENVIRONMENT: 'preprod'
          USER_NAME: ${{ github.event.inputs.user_name }}
          USER_EMAIL: ${{ github.event.inputs.user_email }}
          GITHUB_REPO_TOKEN: ${{ github.event.inputs.token }}
          GITHUB_REPO_BRANCH: ${{ github.event.inputs.branch }}
          GITHUB_REPO_NAME: ${{ github.event.inputs.repo_name }}
          GITHUB_ORG_NAME: ${{ github.event.inputs.org_name }}
          GITHUB_REPO_FILE_LIST: ${{ github.event.inputs.file_list }}
          PULLED_FROM_KEYVAULT: ${{ secrets.PULLED_FROM_KEYVAULT }}
          PULLED_FROM_CYBERARK: ${{ secrets.PULLED_FROM_CYBERARK }}
          PULLED_FROM_SQL: ${{ secrets.PULLED_FROM_SQL }}
          PULLED_FROM_BLOB: ${{ secrets.PULLED_FROM_BLOB }}
          PULLED_FROM_FILE: ${{ secrets.PULLED_FROM_FILE }}
          PULLED_FROM_QUEUE: ${{ secrets.PULLED_FROM_QUEUE }}
          PULLED_FROM_STREAM: ${{ secrets.PULLED_FROM_STREAM }}
          PULLED_FROM_HTTP: ${{ secrets.PULLED_FROM_HTTP }}
          PULLED_FROM_SERVICE: ${{ secrets.PULLED_FROM_SERVICE }}

  deploy:
    name: Deploy-Alpha
    needs: build
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    environment: 'preprod'
    # todo Implement principle of least priv based on need
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      actions: 'write'
      deployments: 'write'
      repository-projects: 'write'
    steps:
    # Checkout the repo
    - uses: actions/checkout@v3

     # Push post creation items like workflows
    - uses: ./.github/workflows/github/repo/create-post
      with:
          USER_NAME: ${{ github.event.inputs.user_name }}
          USER_EMAIL: ${{ github.event.inputs.user_email }}
          GITHUB_REPO_TOKEN: ${{ github.event.inputs.token }}
          GITHUB_REPO_BRANCH: ${{ github.event.inputs.branch }}
          GITHUB_REPO_NAME: ${{ github.event.inputs.repo_name }}
          GITHUB_ORG_NAME: ${{ github.event.inputs.org_name }}

  chat-ops:
    name: Notify-Alpha
    needs: build
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    environment: 'preprod'
    # todo Implement principle of least priv based on need
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      actions: 'write'
      deployments: 'write'
      repository-projects: 'write'
    steps:
    # Send a chat ops notification depending on teams or slack
    - uses: ./.github/workflows/chatops/teams
      with:
          ENVIRONMENT: preprod
          TEAMS_WEBHOOK: ${{ github.event.inputs.teams_webhook }}

    # Send a chat ops notification depending on slack
    - uses: ./.github/workflows/chatops/slack
      with:
          ENVIRONMENT: preprod
          USER_NAME: ${{ github.event.inputs.user_name }}
          SLACK_WEBHOOK: ${{ github.event.inputs.slack_webhook }}

  # todo Perform quality checks & standards here
  
  # Run a shared workflow on the newly minted repo
  # exec-shared-workflow:
  #   name: Exec-Alpha
  #   needs: [build,deploy]
  #   timeout-minutes: 3
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   environment: 'preprod'
  #   # todo Implement principle of least priv based on need
  #   permissions:
  #     contents: 'write'
  #     id-token: 'write'
  #     issues: 'write'
  #     actions: 'write'
  #     deployments: 'write'
  #     repository-projects: 'write'

  #   steps:
  #   - uses: ${{ github.event.inputs.org_name }}/${{ github.event.inputs.repo_name }}/.github/workflows/phase1-alpha-python-executed.yaml@${{ github.event.inputs.branch }}   
  #     with:
  #       secrets:
  #         PULLED_FROM_KEYVAULT: ${{ secrets.PULLED_FROM_KEYVAULT }}
  #         PULLED_FROM_CYBERARK: ${{ secrets.PULLED_FROM_CYBERARK }}
