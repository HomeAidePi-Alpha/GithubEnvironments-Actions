name: Shared Action - Azure - Environment
# This will run when kicked off manually or by trigger
on:
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Environment Name'
        required: true
        default: 'preprod'
      PULLED_FROM_KEYVAULT:
        description: 'Pulled from KeyVault'
        required: false
        default: 'PULLED_FROM_KEYVAULT'
      PULLED_FROM_CYBERARK:
        description: 'Pulled from Cyberark'
        required: false
        default: 'PULLED_FROM_CYBERARK'
      PULLED_FROM_SQL:
        description: 'Pulled from sql server'
        required: false
        default: 'PULLED_FROM_SQL'
      PULLED_FROM_BLOB:
        description: 'Pulled from Blob Storage'
        required: false
        default: 'PULLED_FROM_BLOB'
      PULLED_FROM_FILE:
        description: 'Pulled from some file'
        required: false
        default: 'PULLED_FROM_FILE'
      GITHUB_REPO_BRANCH:
        description: 'GitHub Repo Branch'
        required: true
        default: 'main'
      GITHUB_ORG_NAME:
        description: 'GitHub Org Name'
        required: true
        default: 'HomeAidePi-Alpha'
      GITHUB_REPO_NAME:
        description: 'GitHub Repo Name'
        required: true
        default: 'GitHubEnvironments-Actions'
      TEAMS_WEBHOOK:
        description: 'Github Repo Token'
        required: true
        default: ''

jobs:
  build-azure-environment:
    name: Build-Azure-Environment
    continue-on-error: true
    timeout-minutes: 3
    strategy:
      matrix:
        os: [ubuntu-latest]
    # todo implement quality strategy after tiger team committee approval
    # package:
    #   - coding-standard
    #   - lint-rules (eslint, flake8)
    #   - commit-guidelines
    #   - pull-request-peer-review
    #   - quality-check
    runs-on: ${{ matrix.os }}
    # todo prolly could be a variable for even more consistency and cleanup
    environment:  ${{ github.event.inputs.ENVIRONMENT }}
    # todo Implement principle of least priv based on need
    permissions:
      contents: 'write'
      id-token: 'write'
      issues: 'write'
      actions: 'write'
      deployments: 'write'
      repository-projects: 'write'
    steps:
    # Checkout the repo
    - uses: actions/checkout@v2

    # Create a GitHub Repo, populate base code
    - uses: ./.github/workflows/azure/environment
      with:
          AZURE_CLIENT_ID: ${{ github.event.inputs.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ github.event.inputs.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ github.event.inputs.AZURE_SUBSCRIPTION_ID }}
          TEAMS_WEBHOOK: ${{ github.event.inputs.TEAMS_WEBHOOK }}
          AZURE_CLI_VERSION: ${{ github.event.inputs.AZURE_CLI_VERSION }}
  
  # chat-ops:
  #   name: Notify
  #   needs: [build,deploy]
  #   timeout-minutes: 3
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest]
  #   runs-on: ${{ matrix.os }}
  #   environment: ${{ github.event.inputs.ENVIRONMENT }}

  #   # todo Implement principle of least priv based on need
  #   permissions:
  #     contents: 'write'
  #     id-token: 'write'
  #     issues: 'write'
  #     actions: 'write'
  #     deployments: 'write'
  #     repository-projects: 'write'

  #   steps:
  #   # Send a chat ops notification depending on teams or slack
  #   - uses: ./.github/workflows/chatops/teams
  #     with:
  #         MESSAGE: 'Environment: ${{  github.event.inputs.environment }} deployment completed for commit: ${{ github.sha }}'
  #         TEAMS_WEBHOOK: ${{ github.event.inputs.teams_webhook }}

  #   # # Send a chat ops notification depending on slack
  #   - uses: ./.github/workflows/chatops/slack
  #     with:
  #         ENVIRONMENT: preprod
  #         SLACK_USERNAME: ${{ github.event.inputs.user_name }}
  #         SLACK_WEBHOOK: ${{ github.event.inputs.slack_webhook }}
  #         SLACK_CHANNEL: general
  #         SLACK_COLOR: 'good' # or a specific color like 'good' or '#ff00ff'
  #         SLACK_ICON: https://github.com/HomeAidePi-Alpha/GithubEnvironments-Actions/blob/main/docs/bear-cavalry.png?size=48
  #         SLACK_MESSAGE: ':rocket: '
  #         SLACK_TITLE: 'CI/CQ/CD Completed' 
        

